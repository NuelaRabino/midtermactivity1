{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from 'vuex';\nconst store = createStore({\n  state() {\n    return {\n      books: [{\n        id: 1,\n        title: 'Intro to Computing',\n        price: 1000\n      }, {\n        id: 2,\n        title: 'Python for Beginners',\n        price: 350\n      }, {\n        id: 3,\n        title: 'Mathematics in the Modern World',\n        price: 450\n      }, {\n        id: 4,\n        title: 'Earth and Life Science',\n        price: 400\n      }, {\n        id: 5,\n        title: 'Noli Me Tangere',\n        price: 200\n      }, {\n        id: 6,\n        title: 'El Filibusterismo',\n        price: 250\n      }, {\n        id: 7,\n        title: 'Ibong Adarna',\n        price: 200\n      }, {\n        id: 8,\n        title: 'Romeo and Juliet',\n        price: 300\n      }, {\n        id: 9,\n        title: 'Java for Beginners',\n        price: 800\n      }, {\n        id: 10,\n        title: 'English Book for Grade 1',\n        price: 150\n      }],\n      searchQuery: '',\n      cart: [],\n      isAuthenticated: false,\n      user: null,\n      users: [{\n        id: 1,\n        name: 'Administrator',\n        username: 'admin',\n        password: 'admin123',\n        status: 'verified'\n      }, {\n        id: 2,\n        name: 'Raven San Juan',\n        username: 'reben',\n        password: 'rebenreben',\n        status: 'verified'\n      }, {\n        id: 3,\n        name: 'Harvey Gana',\n        username: 'hgana',\n        password: 'hgana123',\n        status: 'for_verification'\n      }]\n    };\n  },\n  mutations: {\n    setSearchQuery(state, query) {\n      state.searchQuery = query;\n    },\n    addToCart(state, book) {\n      const existingItem = state.cart.find(item => item.id === book.id);\n      if (existingItem) {\n        existingItem.quantity++;\n      } else {\n        state.cart.push({\n          ...book,\n          quantity: 1\n        });\n      }\n    },\n    removeFromCart(state, index) {\n      state.cart.splice(index, 1);\n    },\n    updateAuthenticationStatus(state, status) {\n      state.isAuthenticated = status;\n    },\n    setUser(state, user) {\n      state.user = user;\n    },\n    updateUserStatus(state, {\n      userId,\n      newStatus\n    }) {\n      const userIndex = state.users.findIndex(user => user.id === userId);\n      if (userIndex !== -1) {\n        state.users[userIndex].status = newStatus;\n      }\n    },\n    incrementQuantity(state, index) {\n      state.cart[index].quantity++;\n    },\n    decrementQuantity(state, index) {\n      // Check if the quantity is already 1, if so, do not decrement further\n      if (state.cart[index].quantity > 1) {\n        state.cart[index].quantity--;\n      }\n    }\n  },\n  actions: {\n    purchase() {\n      // Action to handle purchase\n    },\n    authenticate({\n      commit,\n      state\n    }, credentials) {\n      const user = state.users.find(user => user.username === credentials.username && user.password === credentials.password);\n      if (user) {\n        commit('updateAuthenticationStatus', true);\n        commit('setUser', user);\n      }\n    },\n    changeUserStatus({\n      commit\n    }, {\n      userId,\n      newStatus\n    }) {\n      // Action to change user status\n      commit('updateUserStatus', {\n        userId,\n        newStatus\n      });\n    }\n  },\n  getters: {\n    filteredBooks(state) {\n      if (state.searchQuery.trim() === '') {\n        return [];\n      }\n      return state.books.filter(book => book.title.toLowerCase().includes(state.searchQuery.toLowerCase()));\n    },\n    availableBooks: state => state.books,\n    cartItems: state => state.cart,\n    totalPrice: state => state.cart.reduce((total, item) => total + item.price * item.quantity, 0),\n    isAuthenticated: state => state.isAuthenticated,\n    user: state => state.user,\n    userAccounts: state => state.users\n  }\n});\nexport default store;","map":{"version":3,"names":["createStore","store","state","books","id","title","price","searchQuery","cart","isAuthenticated","user","users","name","username","password","status","mutations","setSearchQuery","query","addToCart","book","existingItem","find","item","quantity","push","removeFromCart","index","splice","updateAuthenticationStatus","setUser","updateUserStatus","userId","newStatus","userIndex","findIndex","incrementQuantity","decrementQuantity","actions","purchase","authenticate","commit","credentials","changeUserStatus","getters","filteredBooks","trim","filter","toLowerCase","includes","availableBooks","cartItems","totalPrice","reduce","total","userAccounts"],"sources":["D:/midtermactivity1/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex';\r\n\r\nconst store = createStore({\r\n  state() {\r\n    return {\r\n      books: [\r\n        { id: 1, title: 'Intro to Computing', price: 1000 },\r\n        { id: 2, title: 'Python for Beginners', price: 350 },\r\n        { id: 3, title: 'Mathematics in the Modern World', price: 450 },\r\n        { id: 4, title: 'Earth and Life Science', price: 400 },\r\n        { id: 5, title: 'Noli Me Tangere', price: 200 },\r\n        { id: 6, title: 'El Filibusterismo', price: 250 },\r\n        { id: 7, title: 'Ibong Adarna', price: 200 },\r\n        { id: 8, title: 'Romeo and Juliet', price: 300 },\r\n        { id: 9, title: 'Java for Beginners', price: 800 },\r\n        { id: 10, title: 'English Book for Grade 1', price: 150 },\r\n      ],\r\n      searchQuery: '',\r\n      cart: [],\r\n      isAuthenticated: false,\r\n      user: null,\r\n      users: [\r\n        { id: 1, name: 'Administrator', username: 'admin', password: 'admin123', status: 'verified' },\r\n        { id: 2, name: 'Raven San Juan', username: 'reben', password: 'rebenreben', status: 'verified' },\r\n        { id: 3, name: 'Harvey Gana', username: 'hgana', password: 'hgana123', status: 'for_verification' }\r\n      ]\r\n    };\r\n  },\r\n  mutations: {\r\n    setSearchQuery(state, query) {\r\n      state.searchQuery = query;\r\n    },\r\n    addToCart(state, book) {\r\n      const existingItem = state.cart.find(item => item.id === book.id);\r\n      if (existingItem) {\r\n        existingItem.quantity++;\r\n      } else {\r\n        state.cart.push({ ...book, quantity: 1 });\r\n      }\r\n    },\r\n    removeFromCart(state, index) {\r\n      state.cart.splice(index, 1);\r\n    },\r\n   \r\n    updateAuthenticationStatus(state, status) {\r\n      state.isAuthenticated = status;\r\n    },\r\n    setUser(state, user) {\r\n      state.user = user;\r\n    },\r\n    updateUserStatus(state, { userId, newStatus }) {\r\n      const userIndex = state.users.findIndex(user => user.id === userId);\r\n      if (userIndex !== -1) {\r\n        state.users[userIndex].status = newStatus;\r\n      }\r\n    },\r\n    incrementQuantity(state, index) {\r\n      state.cart[index].quantity++;\r\n    },\r\n    decrementQuantity(state, index) {\r\n      // Check if the quantity is already 1, if so, do not decrement further\r\n      if (state.cart[index].quantity > 1) {\r\n        state.cart[index].quantity--;\r\n      }\r\n    }\r\n  },\r\n  actions: {\r\n    purchase() {\r\n      // Action to handle purchase\r\n    },\r\n    authenticate({ commit, state }, credentials) {\r\n      const user = state.users.find(user => user.username === credentials.username && user.password === credentials.password);\r\n      if (user) {\r\n        commit('updateAuthenticationStatus', true);\r\n        commit('setUser', user);\r\n      }\r\n    },\r\n    changeUserStatus({ commit }, { userId, newStatus }) {\r\n      // Action to change user status\r\n      commit('updateUserStatus', { userId, newStatus });\r\n    }\r\n  },\r\n  getters: {\r\n    filteredBooks(state) {\r\n      if (state.searchQuery.trim() === '') {\r\n        return [];\r\n      }\r\n      return state.books.filter(book =>\r\n        book.title.toLowerCase().includes(state.searchQuery.toLowerCase())\r\n      );\r\n    },\r\n    availableBooks: state => state.books,\r\n    cartItems: state => state.cart,\r\n    totalPrice: state => state.cart.reduce((total, item) => total + (item.price * item.quantity), 0),\r\n    isAuthenticated: state => state.isAuthenticated,\r\n    user: state => state.user,\r\n    userAccounts: state => state.users\r\n  }\r\n});\r\n\r\nexport default store;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}