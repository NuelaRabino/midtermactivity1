{"ast":null,"code":"import { mapGetters, mapMutations, mapActions } from 'vuex';\nimport Swal from 'sweetalert2';\nexport default {\n  computed: {\n    ...mapGetters(['cartItems', 'totalPrice'])\n  },\n  methods: {\n    ...mapMutations(['removeFromCart', 'incrementQuantity', 'decrementQuantity']),\n    ...mapActions(['purchaseAll']),\n    async confirmPurchaseAll() {\n      const result = await Swal.fire({\n        title: 'Are you sure?',\n        text: 'Do you want to purchase all items in your cart?',\n        icon: 'question',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes, purchase all!'\n      });\n      if (result.isConfirmed) {\n        await this.purchaseAll();\n        Swal.fire('Purchased!', 'All items have been purchased.', 'success');\n      }\n    },\n    increaseQuantity(index) {\n      // Call the mutation function provided by Vuex to increment the quantity\n      this.incrementQuantity(index);\n      // Recalculate total price after updating quantity\n      this.calculateTotalPrice();\n    },\n    decrementQuantity(index) {\n      // Check if the quantity is already 1, if so, do not decrement further\n      if (this.cartItems[index].quantity > 1) {\n        this.$store.commit('decrementQuantity', index);\n        this.calculateTotalPrice();\n      }\n    },\n    calculateTotalPrice() {\n      // Call your Vuex getter to recalculate the total price\n      // This will trigger the getter to recalculate based on the updated quantities\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","mapMutations","mapActions","Swal","computed","methods","confirmPurchaseAll","result","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","purchaseAll","increaseQuantity","index","incrementQuantity","calculateTotalPrice","decrementQuantity","cartItems","quantity","$store","commit"],"sources":["C:\\New folder\\midtermactivity1-main\\midtermactivity1\\src\\components\\ShoppingCart.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mx-auto px-4 py-8\">\r\n    <h2 class=\"text-3xl font-bold mb-4\">Shopping Cart</h2>\r\n    <div class=\"overflow-x-auto\">\r\n      <table class=\"table-auto w-full border-collapse border border-gray-300\">\r\n        <thead>\r\n          <tr class=\"bg-gray-200\">\r\n            <th class=\"px-4 py-2\">Book Name</th>\r\n            <th class=\"px-4 py-2\">Quantity</th>\r\n            <th class=\"px-4 py-2\">Price</th>\r\n            <th class=\"px-4 py-2\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"(item, index) in cartItems\" :key=\"index\" class=\"border-b border-gray-300\">\r\n            <td class=\"px-4 py-2\">{{ item.title }}</td>\r\n            <td class=\"px-4 py-2\">\r\n              <button @click=\"decrementQuantity(index)\" class=\"bg-blue-500 hover:bg-blue-600 text-white font-bold py-1 px-2 rounded-md\">-</button>\r\n              <span class=\"px-2\">{{ item.quantity }}</span>\r\n              <button @click=\"incrementQuantity(index)\" class=\"bg-blue-500 hover:bg-blue-600 text-white font-bold py-1 px-2 rounded-md\">+</button>\r\n            </td>\r\n            <td class=\"px-4 py-2\">₱{{ item.price }}</td>\r\n            <td class=\"px-4 py-2\">\r\n              <button @click=\"removeFromCart(index)\" class=\"bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded\">Remove</button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <p class=\"text-xl font-bold mt-4\">Total: ₱{{ totalPrice }}</p>\r\n    <div class=\"mt-4\">\r\n      <button @click=\"confirmPurchaseAll\" class=\"bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded-md\">Purchase All</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapMutations, mapActions } from 'vuex'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport default {\r\n  computed: {\r\n    ...mapGetters(['cartItems', 'totalPrice'])\r\n  },\r\n  methods: {\r\n    ...mapMutations(['removeFromCart', 'incrementQuantity', 'decrementQuantity']),\r\n    ...mapActions(['purchaseAll']),\r\n    async confirmPurchaseAll() {\r\n      const result = await Swal.fire({\r\n        title: 'Are you sure?',\r\n        text: 'Do you want to purchase all items in your cart?',\r\n        icon: 'question',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Yes, purchase all!'\r\n      })\r\n\r\n      if (result.isConfirmed) {\r\n        await this.purchaseAll()\r\n        Swal.fire(\r\n          'Purchased!',\r\n          'All items have been purchased.',\r\n          'success'\r\n        )\r\n      }\r\n    },\r\n    increaseQuantity(index) {\r\n    // Call the mutation function provided by Vuex to increment the quantity\r\n    this.incrementQuantity(index);\r\n    // Recalculate total price after updating quantity\r\n    this.calculateTotalPrice();\r\n   },\r\n   decrementQuantity(index) {\r\n    // Check if the quantity is already 1, if so, do not decrement further\r\n    if (this.cartItems[index].quantity > 1) {\r\n      this.$store.commit('decrementQuantity', index);\r\n      this.calculateTotalPrice();\r\n    }\r\n  },\r\n    calculateTotalPrice() {\r\n      // Call your Vuex getter to recalculate the total price\r\n      // This will trigger the getter to recalculate based on the updated quantities\r\n    }\r\n  }\r\n}\r\n</script>"],"mappings":"AAqCA,SAASA,UAAU,EAAEC,YAAY,EAAEC,UAAS,QAAS,MAAK;AAC1D,OAAOC,IAAG,MAAO,aAAY;AAE7B,eAAe;EACbC,QAAQ,EAAE;IACR,GAAGJ,UAAU,CAAC,CAAC,WAAW,EAAE,YAAY,CAAC;EAC3C,CAAC;EACDK,OAAO,EAAE;IACP,GAAGJ,YAAY,CAAC,CAAC,gBAAgB,EAAE,mBAAmB,EAAE,mBAAmB,CAAC,CAAC;IAC7E,GAAGC,UAAU,CAAC,CAAC,aAAa,CAAC,CAAC;IAC9B,MAAMI,kBAAkBA,CAAA,EAAG;MACzB,MAAMC,MAAK,GAAI,MAAMJ,IAAI,CAACK,IAAI,CAAC;QAC7BC,KAAK,EAAE,eAAe;QACtBC,IAAI,EAAE,iDAAiD;QACvDC,IAAI,EAAE,UAAU;QAChBC,gBAAgB,EAAE,IAAI;QACtBC,kBAAkB,EAAE,SAAS;QAC7BC,iBAAiB,EAAE,MAAM;QACzBC,iBAAiB,EAAE;MACrB,CAAC;MAED,IAAIR,MAAM,CAACS,WAAW,EAAE;QACtB,MAAM,IAAI,CAACC,WAAW,CAAC;QACvBd,IAAI,CAACK,IAAI,CACP,YAAY,EACZ,gCAAgC,EAChC,SACF;MACF;IACF,CAAC;IACDU,gBAAgBA,CAACC,KAAK,EAAE;MACxB;MACA,IAAI,CAACC,iBAAiB,CAACD,KAAK,CAAC;MAC7B;MACA,IAAI,CAACE,mBAAmB,CAAC,CAAC;IAC3B,CAAC;IACDC,iBAAiBA,CAACH,KAAK,EAAE;MACxB;MACA,IAAI,IAAI,CAACI,SAAS,CAACJ,KAAK,CAAC,CAACK,QAAO,GAAI,CAAC,EAAE;QACtC,IAAI,CAACC,MAAM,CAACC,MAAM,CAAC,mBAAmB,EAAEP,KAAK,CAAC;QAC9C,IAAI,CAACE,mBAAmB,CAAC,CAAC;MAC5B;IACF,CAAC;IACCA,mBAAmBA,CAAA,EAAG;MACpB;MACA;IAAA;EAEJ;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}