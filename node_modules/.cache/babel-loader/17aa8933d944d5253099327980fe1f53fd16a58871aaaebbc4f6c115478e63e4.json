{"ast":null,"code":"import { mapGetters, mapActions } from 'vuex';\nexport default {\n  computed: {\n    ...mapGetters(['userAccounts']),\n    users() {\n      // Filter out the Administrator account from the list\n      return this.userAccounts.filter(user => user.name !== 'Administrator');\n    }\n  },\n  methods: {\n    ...mapActions(['changeUserStatus']),\n    changeStatus(user, newStatus) {\n      user.status = newStatus;\n      this.changeUserStatus({\n        userId: user.id,\n        newStatus\n      });\n    },\n    logout() {\n      // Reset authentication status and user object\n      this.$store.commit('updateAuthenticationStatus', false);\n      this.$store.commit('setUser', null);\n      // Redirect to login page (replace with your login page URL)\n      window.location.href = '/login';\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","mapActions","computed","users","userAccounts","filter","user","name","methods","changeStatus","newStatus","status","changeUserStatus","userId","id","logout","$store","commit","window","location","href"],"sources":["C:\\Users\\Nuela\\midtermact1\\src\\components\\AdminPanel.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h2>User Accounts</h2>\r\n      <button @click=\"logout\">Log Out</button>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Status</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"user in users\" :key=\"user.id\">\r\n            <td>{{ user.name }}</td>\r\n            <td :class=\"{ 'verified': user.status === 'verified', 'for-verification': user.status === 'for_verification' }\">{{ user.status }}</td>\r\n            <td>\r\n              <button v-if=\"user.status !== 'verified' && user.name !== 'Administrator'\" @click=\"changeStatus(user, 'verified')\">Verified</button>\r\n              <button v-if=\"user.status !== 'for_verification' && user.name !== 'Administrator'\" @click=\"changeStatus(user, 'for_verification')\">For Verification</button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { mapGetters, mapActions } from 'vuex';\r\n  \r\n  export default {\r\n    computed: {\r\n      ...mapGetters(['userAccounts']),\r\n      users() {\r\n        // Filter out the Administrator account from the list\r\n        return this.userAccounts.filter(user => user.name !== 'Administrator');\r\n      }\r\n    },\r\n    methods: {\r\n      ...mapActions(['changeUserStatus']),\r\n      changeStatus(user, newStatus) {\r\n        user.status = newStatus;\r\n        this.changeUserStatus({ userId: user.id, newStatus });\r\n      },\r\n      logout() {\r\n        // Reset authentication status and user object\r\n        this.$store.commit('updateAuthenticationStatus', false);\r\n        this.$store.commit('setUser', null);\r\n        // Redirect to login page (replace with your login page URL)\r\n        window.location.href = '/login';\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  .verified {\r\n    color: green;\r\n  }\r\n  \r\n  .for-verification {\r\n    color: orange;\r\n  }\r\n  </style>\r\n  "],"mappings":"AA2BE,SAASA,UAAU,EAAEC,UAAS,QAAS,MAAM;AAE7C,eAAe;EACbC,QAAQ,EAAE;IACR,GAAGF,UAAU,CAAC,CAAC,cAAc,CAAC,CAAC;IAC/BG,KAAKA,CAAA,EAAG;MACN;MACA,OAAO,IAAI,CAACC,YAAY,CAACC,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACC,IAAG,KAAM,eAAe,CAAC;IACxE;EACF,CAAC;EACDC,OAAO,EAAE;IACP,GAAGP,UAAU,CAAC,CAAC,kBAAkB,CAAC,CAAC;IACnCQ,YAAYA,CAACH,IAAI,EAAEI,SAAS,EAAE;MAC5BJ,IAAI,CAACK,MAAK,GAAID,SAAS;MACvB,IAAI,CAACE,gBAAgB,CAAC;QAAEC,MAAM,EAAEP,IAAI,CAACQ,EAAE;QAAEJ;MAAU,CAAC,CAAC;IACvD,CAAC;IACDK,MAAMA,CAAA,EAAG;MACP;MACA,IAAI,CAACC,MAAM,CAACC,MAAM,CAAC,4BAA4B,EAAE,KAAK,CAAC;MACvD,IAAI,CAACD,MAAM,CAACC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC;MACnC;MACAC,MAAM,CAACC,QAAQ,CAACC,IAAG,GAAI,QAAQ;IACjC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}