{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// store/index.js\nimport { createStore } from 'vuex';\nexport default createStore({\n  state() {\n    return {\n      books: [{\n        id: 1,\n        title: 'Book 1',\n        price: 10\n      }, {\n        id: 2,\n        title: 'Book 2',\n        price: 15\n      }\n      // Add more books here\n      ],\n      cart: [],\n      isAuthenticated: false,\n      user: null // Store authenticated user's information\n    };\n  },\n  mutations: {\n    addToCart(state, book) {\n      state.cart.push(book);\n    },\n    removeFromCart(state, index) {\n      state.cart.splice(index, 1);\n    },\n    updateAuthenticationStatus(state, {\n      isAuthenticated,\n      user\n    }) {\n      state.isAuthenticated = isAuthenticated;\n      state.user = user;\n    }\n  },\n  actions: {\n    authenticate({\n      commit\n    }, credentials) {\n      // Simulate user authentication and authorization\n      // Example: You can authenticate against a backend API\n      let user = null;\n      if (credentials.username === 'administrator' && credentials.password === 'admin123') {\n        user = {\n          name: 'Administrator',\n          username: 'administrator',\n          status: 'admin'\n        };\n      } else if (credentials.username === 'nrabino' && credentials.password === 'nrabino123') {\n        user = {\n          name: 'Nuela Rabino',\n          username: 'nrabino',\n          status: 'verified'\n        };\n      } else if (credentials.username === 'hgana' && credentials.password === 'hgana123') {\n        user = {\n          name: 'Harvey Gana',\n          username: 'hgana',\n          status: 'for_verification'\n        };\n      }\n      const isAuthenticated = !!user;\n      commit('updateAuthenticationStatus', {\n        isAuthenticated,\n        user\n      });\n    }\n  },\n  getters: {\n    availableBooks: state => state.books,\n    cartItems: state => state.cart,\n    totalPrice: state => state.cart.reduce((total, item) => total + item.price, 0)\n  }\n});","map":{"version":3,"names":["createStore","state","books","id","title","price","cart","isAuthenticated","user","mutations","addToCart","book","push","removeFromCart","index","splice","updateAuthenticationStatus","actions","authenticate","commit","credentials","username","password","name","status","getters","availableBooks","cartItems","totalPrice","reduce","total","item"],"sources":["C:/Users/Nuela/midtermact1/src/store/index.js"],"sourcesContent":["// store/index.js\r\nimport { createStore } from 'vuex'\r\n\r\nexport default createStore({\r\n  state() {\r\n    return {\r\n      books: [\r\n        { id: 1, title: 'Book 1', price: 10 },\r\n        { id: 2, title: 'Book 2', price: 15 },\r\n        // Add more books here\r\n      ],\r\n      cart: [],\r\n      isAuthenticated: false,\r\n      user: null // Store authenticated user's information\r\n    }\r\n  },\r\n  mutations: {\r\n    addToCart(state, book) {\r\n      state.cart.push(book)\r\n    },\r\n    removeFromCart(state, index) {\r\n      state.cart.splice(index, 1)\r\n    },\r\n    updateAuthenticationStatus(state, { isAuthenticated, user }) {\r\n      state.isAuthenticated = isAuthenticated\r\n      state.user = user\r\n    }\r\n  },\r\n  actions: {\r\n    authenticate({ commit }, credentials) {\r\n      // Simulate user authentication and authorization\r\n      // Example: You can authenticate against a backend API\r\n      let user = null\r\n      if (credentials.username === 'administrator' && credentials.password === 'admin123') {\r\n        user = { name: 'Administrator', username: 'administrator', status: 'admin' }\r\n      } else if (credentials.username === 'nrabino' && credentials.password === 'nrabino123') {\r\n        user = { name: 'Nuela Rabino', username: 'nrabino', status: 'verified' }\r\n      } else if (credentials.username === 'hgana' && credentials.password === 'hgana123') {\r\n        user = { name: 'Harvey Gana', username: 'hgana', status: 'for_verification' }\r\n      }\r\n      \r\n      const isAuthenticated = !!user\r\n      commit('updateAuthenticationStatus', { isAuthenticated, user })\r\n    }\r\n  },\r\n  getters: {\r\n    availableBooks: state => state.books,\r\n    cartItems: state => state.cart,\r\n    totalPrice: state => state.cart.reduce((total, item) => total + item.price, 0)\r\n  }\r\n})\r\n"],"mappings":";AAAA;AACA,SAASA,WAAW,QAAQ,MAAM;AAElC,eAAeA,WAAW,CAAC;EACzBC,KAAKA,CAAA,EAAG;IACN,OAAO;MACLC,KAAK,EAAE,CACL;QAAEC,EAAE,EAAE,CAAC;QAAEC,KAAK,EAAE,QAAQ;QAAEC,KAAK,EAAE;MAAG,CAAC,EACrC;QAAEF,EAAE,EAAE,CAAC;QAAEC,KAAK,EAAE,QAAQ;QAAEC,KAAK,EAAE;MAAG;MACpC;MAAA,CACD;MACDC,IAAI,EAAE,EAAE;MACRC,eAAe,EAAE,KAAK;MACtBC,IAAI,EAAE,IAAI,CAAC;IACb,CAAC;EACH,CAAC;EACDC,SAAS,EAAE;IACTC,SAASA,CAACT,KAAK,EAAEU,IAAI,EAAE;MACrBV,KAAK,CAACK,IAAI,CAACM,IAAI,CAACD,IAAI,CAAC;IACvB,CAAC;IACDE,cAAcA,CAACZ,KAAK,EAAEa,KAAK,EAAE;MAC3Bb,KAAK,CAACK,IAAI,CAACS,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;IAC7B,CAAC;IACDE,0BAA0BA,CAACf,KAAK,EAAE;MAAEM,eAAe;MAAEC;IAAK,CAAC,EAAE;MAC3DP,KAAK,CAACM,eAAe,GAAGA,eAAe;MACvCN,KAAK,CAACO,IAAI,GAAGA,IAAI;IACnB;EACF,CAAC;EACDS,OAAO,EAAE;IACPC,YAAYA,CAAC;MAAEC;IAAO,CAAC,EAAEC,WAAW,EAAE;MACpC;MACA;MACA,IAAIZ,IAAI,GAAG,IAAI;MACf,IAAIY,WAAW,CAACC,QAAQ,KAAK,eAAe,IAAID,WAAW,CAACE,QAAQ,KAAK,UAAU,EAAE;QACnFd,IAAI,GAAG;UAAEe,IAAI,EAAE,eAAe;UAAEF,QAAQ,EAAE,eAAe;UAAEG,MAAM,EAAE;QAAQ,CAAC;MAC9E,CAAC,MAAM,IAAIJ,WAAW,CAACC,QAAQ,KAAK,SAAS,IAAID,WAAW,CAACE,QAAQ,KAAK,YAAY,EAAE;QACtFd,IAAI,GAAG;UAAEe,IAAI,EAAE,cAAc;UAAEF,QAAQ,EAAE,SAAS;UAAEG,MAAM,EAAE;QAAW,CAAC;MAC1E,CAAC,MAAM,IAAIJ,WAAW,CAACC,QAAQ,KAAK,OAAO,IAAID,WAAW,CAACE,QAAQ,KAAK,UAAU,EAAE;QAClFd,IAAI,GAAG;UAAEe,IAAI,EAAE,aAAa;UAAEF,QAAQ,EAAE,OAAO;UAAEG,MAAM,EAAE;QAAmB,CAAC;MAC/E;MAEA,MAAMjB,eAAe,GAAG,CAAC,CAACC,IAAI;MAC9BW,MAAM,CAAC,4BAA4B,EAAE;QAAEZ,eAAe;QAAEC;MAAK,CAAC,CAAC;IACjE;EACF,CAAC;EACDiB,OAAO,EAAE;IACPC,cAAc,EAAEzB,KAAK,IAAIA,KAAK,CAACC,KAAK;IACpCyB,SAAS,EAAE1B,KAAK,IAAIA,KAAK,CAACK,IAAI;IAC9BsB,UAAU,EAAE3B,KAAK,IAAIA,KAAK,CAACK,IAAI,CAACuB,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAKD,KAAK,GAAGC,IAAI,CAAC1B,KAAK,EAAE,CAAC;EAC/E;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}